{"version":3,"sources":["webpack:///../ketchup/dist/esm/legacy/kup-chart.entry.js"],"names":["ChartType","ChartAspect","formatToNumber","cell","obj","numeral","k","value","formatToMomentDate","format","t","p","moment","getColumnByName","name","columns","i","length","column","convertColumns","data","_a","series","axis","axisColumn","push","map","serie","c","convertRows","showMarks","rows","forEach","r","cells","currentRow","index","addMark","isNumber","toString","isDate","toDate","KupChart","hostRef","registerInstance","this","types","Hbar","colors","legend","stacked","version","kupChartClicked","createEvent","prototype","componentDidLoad","_this","google","document","querySelectorAll","node","el","shadowRoot","appendChild","cloneNode","loadGoogleChart","err","console","error","componentWillUpdate","gChart","clearChart","componentDidUpdate","charts","setOnLoadCallback","createChart","bind","createGoogleChart","isComboChart","visualization","ComboChart","chartContainer","Area","AreaChart","Bubble","BubbleChart","Cal","Calendar","Candlestick","CandlestickChart","Geo","GeoChart","BarChart","Line","LineChart","Pie","PieChart","Sankey","Scatter","ScatterChart","ColumnChart","getMainChartType","Unk","createGoogleChartOptions","opts","is3D","D3","asp","width","height","position","Vbar","isStacked","graphTitle","title","titleTextStyle","graphTitleColor","color","graphTitleSize","fontSize","type","serieType","tableColumns","tableRows","dataTableColumns","label","role","gChartDataTable","arrayToDataTable","concat","gChartView","DataView","options","draw","events","addListener","onChartSelect","selectedItem","getSelection","event","date","datetime","row","rowIndex","getTableRowIndex","colIndex","originalRowIndex","originalColIndex","getTableColumnIndex","getColumnProperty","getColumnByName$1","emit","render","h","id","ref","_home_francesco_Work_javascript_ketchup_packages_ketchup_showcase_node_modules_babel_runtime_corejs2_core_js_object_define_property__WEBPACK_IMPORTED_MODULE_0___default","get","getElement","enumerable","configurable"],"mappings":"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","file":"js/chunk-2d2095eb.bcc78966.js","sourcesContent":["import { r as registerInstance, c as createEvent, h, g as getElement } from './chunk-1851c479.js';\nimport './chunk-d8060b98.js';\nimport { n as numeral, m as moment, i as isNumber, a as isDate, g as getColumnByName$1 } from './chunk-67fad384.js';\nvar ChartType;\n(function (ChartType) {\n    ChartType[\"Area\"] = \"Area\";\n    ChartType[\"Bubble\"] = \"Bubble\";\n    ChartType[\"Cal\"] = \"Cal\";\n    ChartType[\"Candlestick\"] = \"Candlestick\";\n    ChartType[\"Combo\"] = \"Combo\";\n    ChartType[\"Geo\"] = \"Geo\";\n    ChartType[\"Hbar\"] = \"Hbar\";\n    ChartType[\"Line\"] = \"Line\";\n    ChartType[\"Ohlc\"] = \"Ohlc\";\n    ChartType[\"Pie\"] = \"Pie\";\n    ChartType[\"Sankey\"] = \"Sankey\";\n    ChartType[\"Scatter\"] = \"Scatter\";\n    ChartType[\"Unk\"] = \"Unk\";\n    ChartType[\"Vbar\"] = \"Vbar\";\n})(ChartType || (ChartType = {}));\nvar ChartAspect;\n(function (ChartAspect) {\n    ChartAspect[\"D2\"] = \"2D\";\n    ChartAspect[\"D3\"] = \"3D\";\n})(ChartAspect || (ChartAspect = {}));\nfunction formatToNumber(cell) {\n    if (cell.obj) {\n        return numeral(cell.obj.k).value();\n    }\n    return numeral(cell.value).value();\n}\nfunction formatToMomentDate(cell) {\n    var format = 'YYYYMMDD';\n    if (cell.obj) {\n        var obj = cell.obj;\n        if ('D8' === obj.t && '*DMYY' === obj.p) {\n            format = 'DDMMYYYY';\n        }\n        return moment(cell.obj.k, format);\n    }\n    return moment(cell.value, 'DD/MM/YYYY');\n}\n// TODO this should be in a \"data-table\" utility file\nfunction getColumnByName(name, columns) {\n    for (var i = 0; i < columns.length; i++) {\n        var column = columns[i];\n        if (name === column.name) {\n            return column;\n        }\n    }\n    return null;\n}\nvar convertColumns = function (data, _a) {\n    var series = _a.series, axis = _a.axis;\n    if (!data || !series) {\n        return [];\n    }\n    var columns = [];\n    // axis\n    var axisColumn = getColumnByName(axis, data.columns);\n    if (axisColumn) {\n        columns.push(axisColumn);\n    }\n    // series\n    series.map(function (serie) {\n        // searching colum\n        var c = getColumnByName(serie, data.columns);\n        if (c) {\n            columns.push(c);\n        }\n    });\n    return columns;\n};\nvar convertRows = function (data, columns, showMarks) {\n    if (!data) {\n        return [];\n    }\n    var rows = [];\n    if (data.rows) {\n        data.rows.forEach(function (r) {\n            var cells = r.cells;\n            var currentRow = [];\n            columns.forEach(function (c, index) {\n                var cell = cells[c.name];\n                if (cell && cell.obj) {\n                    var addMark = showMarks && index > 0;\n                    if (isNumber(cell.obj)) {\n                        var value = formatToNumber(cell);\n                        currentRow.push(value);\n                        if (addMark) {\n                            currentRow.push(value.toString());\n                        }\n                    }\n                    else if (isDate(cell.obj)) {\n                        var value = formatToMomentDate(cell).toDate();\n                        currentRow.push(value);\n                        if (addMark) {\n                            currentRow.push(value.toString());\n                        }\n                    }\n                    else {\n                        currentRow.push(cell.obj.k);\n                        if (addMark) {\n                            currentRow.push(cell.value);\n                        }\n                    }\n                }\n            });\n            rows.push(currentRow);\n        });\n    }\n    return rows;\n};\nvar KupChart = /** @class */ (function () {\n    function KupChart(hostRef) {\n        registerInstance(this, hostRef);\n        this.types = [ChartType.Hbar];\n        this.colors = [];\n        this.legend = true;\n        this.stacked = false;\n        this.showMarks = false;\n        /**\n         * Google chart version to load\n         */\n        this.version = '45.2';\n        this.kupChartClicked = createEvent(this, \"kupChartClicked\", 6);\n    }\n    KupChart.prototype.componentDidLoad = function () {\n        var _this = this;\n        if (!this.axis || !this.series) {\n            // cannot create chart\n            return;\n        }\n        // loading charts\n        if (google) {\n            // getting google charts css from main document\n            document\n                .querySelectorAll(\"link[href^=\\\"https://www.gstatic.com/charts/\" + this.version + \"/css\\\"]\")\n                .forEach(function (node) { return _this.el.shadowRoot.appendChild(node.cloneNode()); });\n            try {\n                this.loadGoogleChart();\n            }\n            catch (err) {\n                console.error(err);\n            }\n        }\n    };\n    KupChart.prototype.componentWillUpdate = function () {\n        if (this.gChart) {\n            this.gChart.clearChart();\n        }\n    };\n    KupChart.prototype.componentDidUpdate = function () {\n        this.loadGoogleChart();\n    };\n    KupChart.prototype.loadGoogleChart = function () {\n        google.charts.setOnLoadCallback(this.createChart.bind(this));\n    };\n    KupChart.prototype.createGoogleChart = function () {\n        if (this.isComboChart()) {\n            return new google.visualization.ComboChart(this.chartContainer);\n        }\n        else if (this.types.length === 1) {\n            switch (this.types[0]) {\n                case ChartType.Area:\n                    return new google.visualization.AreaChart(this.chartContainer);\n                case ChartType.Bubble:\n                    return new google.visualization.BubbleChart(this.chartContainer);\n                case ChartType.Cal:\n                    return new google.visualization.Calendar(this.chartContainer);\n                case ChartType.Candlestick:\n                    return new google.visualization.CandlestickChart(this.chartContainer);\n                case ChartType.Geo:\n                    return new google.visualization.GeoChart(this.chartContainer);\n                case ChartType.Hbar:\n                    return new google.visualization.BarChart(this.chartContainer);\n                case ChartType.Line:\n                    return new google.visualization.LineChart(this.chartContainer);\n                case ChartType.Pie:\n                    return new google.visualization.PieChart(this.chartContainer);\n                case ChartType.Sankey:\n                    return new google.visualization.Sankey(this.chartContainer);\n                case ChartType.Scatter:\n                    return new google.visualization.ScatterChart(this.chartContainer);\n                default:\n                    return new google.visualization.ColumnChart(this.chartContainer);\n            }\n        }\n    };\n    KupChart.prototype.getMainChartType = function () {\n        if (this.types.length > 0) {\n            return this.types[0];\n        }\n        return ChartType.Unk;\n    };\n    KupChart.prototype.isComboChart = function () {\n        return this.types.length > 1;\n    };\n    KupChart.prototype.createGoogleChartOptions = function () {\n        var opts = {\n            is3D: ChartAspect.D3 === this.asp,\n        };\n        if (this.colors && this.colors.length > 0) {\n            opts.colors = this.colors;\n        }\n        if (this.width) {\n            opts.width = this.width;\n        }\n        if (this.height) {\n            opts.height = this.height;\n        }\n        if (!this.legend) {\n            opts.legend = {\n                position: 'none',\n            };\n        }\n        if (this.stacked &&\n            (ChartType.Hbar === this.getMainChartType() ||\n                ChartType.Vbar === this.getMainChartType())) {\n            opts.isStacked = true;\n        }\n        if (this.graphTitle) {\n            opts.title = this.graphTitle;\n            opts.titleTextStyle = {};\n            if (this.graphTitleColor) {\n                opts.titleTextStyle.color = this.graphTitleColor;\n            }\n            if (this.graphTitleSize) {\n                opts.titleTextStyle.fontSize = this.graphTitleSize;\n            }\n        }\n        // series for combo chart\n        if (this.isComboChart()) {\n            opts.series = {};\n            this.types.forEach(function (type, index) {\n                var serieType = 'bars';\n                if (ChartType.Line === type) {\n                    serieType = 'line';\n                }\n                else if (ChartType.Area === type) {\n                    serieType = 'area';\n                }\n                opts.series[index.toString()] = {\n                    type: serieType,\n                };\n            });\n        }\n        return opts;\n    };\n    KupChart.prototype.createChart = function () {\n        var tableColumns = convertColumns(this.data, {\n            axis: this.axis,\n            series: this.series,\n        });\n        var tableRows = convertRows(this.data, tableColumns, this.showMarks);\n        var dataTableColumns = [];\n        for (var i = 0; i < tableColumns.length; i++) {\n            var c = tableColumns[i];\n            dataTableColumns.push({\n                label: c.name,\n            });\n            if (i > 0 && this.showMarks) {\n                dataTableColumns.push({\n                    type: 'string',\n                    role: 'annotation',\n                });\n            }\n        }\n        this.gChartDataTable = new google.visualization.arrayToDataTable([\n            dataTableColumns\n        ].concat(tableRows));\n        this.gChartView = new google.visualization.DataView(this.gChartDataTable);\n        this.gChart = this.createGoogleChart();\n        var options = this.createGoogleChartOptions();\n        this.gChart.draw(this.gChartView, options);\n        google.visualization.events.addListener(this.gChart, 'select', this.onChartSelect.bind(this));\n    };\n    KupChart.prototype.onChartSelect = function () {\n        var selectedItem = this.gChart.getSelection()[0];\n        if (selectedItem) {\n            var event = {};\n            if (selectedItem.date) {\n                // calendar chart\n                event.datetime = selectedItem.date;\n                if (selectedItem.row || selectedItem.row == 0) {\n                    var rowIndex = this.gChartView.getTableRowIndex(selectedItem.row);\n                    event.row = this.data.rows[rowIndex];\n                }\n                else {\n                    return;\n                }\n            }\n            else {\n                // any other chart\n                var rowIndex = selectedItem.row;\n                var colIndex = selectedItem.column;\n                var originalRowIndex = this.gChartView.getTableRowIndex(rowIndex != null ? rowIndex : 0);\n                event.row = this.data.rows[originalRowIndex];\n                if (this.series.length > 1) {\n                    var originalColIndex = this.gChartView.getTableColumnIndex(colIndex != null ? colIndex : 0);\n                    // checking if col is annotation\n                    if ('annotation' ===\n                        this.gChartDataTable.getColumnProperty(originalColIndex, 'role')) {\n                        --originalColIndex;\n                    }\n                    event.column = getColumnByName$1(this.data.columns, this.series[originalColIndex - 1]);\n                }\n                else {\n                    event.column = getColumnByName$1(this.data.columns, this.series[0]);\n                }\n            }\n            this.kupChartClicked.emit(event);\n        }\n    };\n    KupChart.prototype.render = function () {\n        var _this = this;\n        return h(\"div\", { id: \"chart\", ref: function (el) { return (_this.chartContainer = el); } });\n    };\n    Object.defineProperty(KupChart.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    return KupChart;\n}());\nexport { KupChart as kup_chart };\n"],"sourceRoot":""}