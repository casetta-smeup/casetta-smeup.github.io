{"version":3,"sources":["src/assets/dist/esm/legacy/kup-chart.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, c as createEvent, h, g as getElement } from './chunk-1851c479.js';\nimport './chunk-d8060b98.js';\nimport { n as numeral, m as moment, i as isNumber, a as isDate, g as getColumnByName$1 } from './chunk-621f9806.js';\nvar ChartType;\n(function (ChartType) {\n    ChartType[\"Area\"] = \"Area\";\n    ChartType[\"Bubble\"] = \"Bubble\";\n    ChartType[\"Cal\"] = \"Cal\";\n    ChartType[\"Candlestick\"] = \"Candlestick\";\n    ChartType[\"Combo\"] = \"Combo\";\n    ChartType[\"Geo\"] = \"Geo\";\n    ChartType[\"Hbar\"] = \"Hbar\";\n    ChartType[\"Line\"] = \"Line\";\n    ChartType[\"Ohlc\"] = \"Ohlc\";\n    ChartType[\"Pie\"] = \"Pie\";\n    ChartType[\"Sankey\"] = \"Sankey\";\n    ChartType[\"Scatter\"] = \"Scatter\";\n    ChartType[\"Unk\"] = \"Unk\";\n    ChartType[\"Vbar\"] = \"Vbar\";\n})(ChartType || (ChartType = {}));\nvar ChartAspect;\n(function (ChartAspect) {\n    ChartAspect[\"D2\"] = \"2D\";\n    ChartAspect[\"D3\"] = \"3D\";\n})(ChartAspect || (ChartAspect = {}));\nfunction formatToNumber(cell) {\n    if (cell.obj) {\n        return numeral(cell.obj.k).value();\n    }\n    return numeral(cell.value).value();\n}\nfunction formatToMomentDate(cell) {\n    var format = 'YYYYMMDD';\n    if (cell.obj) {\n        var obj = cell.obj;\n        if ('D8' === obj.t && '*DMYY' === obj.p) {\n            format = 'DDMMYYYY';\n        }\n        return moment(cell.obj.k, format);\n    }\n    return moment(cell.value, 'DD/MM/YYYY');\n}\n// TODO this should be in a \"data-table\" utility file\nfunction getColumnByName(name, columns) {\n    for (var i = 0; i < columns.length; i++) {\n        var column = columns[i];\n        if (name === column.name) {\n            return column;\n        }\n    }\n    return null;\n}\nvar convertColumns = function (data, _a) {\n    var series = _a.series, axis = _a.axis;\n    if (!data || !series) {\n        return [];\n    }\n    var columns = [];\n    // axis\n    var axisColumn = getColumnByName(axis, data.columns);\n    if (axisColumn) {\n        columns.push(axisColumn);\n    }\n    // series\n    series.map(function (serie) {\n        // searching colum\n        var c = getColumnByName(serie, data.columns);\n        if (c) {\n            columns.push(c);\n        }\n    });\n    return columns;\n};\nvar convertRows = function (data, columns, showMarks) {\n    if (!data) {\n        return [];\n    }\n    var rows = [];\n    if (data.rows) {\n        data.rows.forEach(function (r) {\n            var cells = r.cells;\n            var currentRow = [];\n            columns.forEach(function (c, index) {\n                var cell = cells[c.name];\n                if (cell && cell.obj) {\n                    var addMark = showMarks && index > 0;\n                    if (isNumber(cell.obj)) {\n                        var value = formatToNumber(cell);\n                        currentRow.push(value);\n                        if (addMark) {\n                            currentRow.push(value.toString());\n                        }\n                    }\n                    else if (isDate(cell.obj)) {\n                        var value = formatToMomentDate(cell).toDate();\n                        currentRow.push(value);\n                        if (addMark) {\n                            currentRow.push(value.toString());\n                        }\n                    }\n                    else {\n                        currentRow.push(cell.obj.k);\n                        if (addMark) {\n                            currentRow.push(cell.value);\n                        }\n                    }\n                }\n            });\n            rows.push(currentRow);\n        });\n    }\n    return rows;\n};\nvar KupChart = /** @class */ (function () {\n    function KupChart(hostRef) {\n        registerInstance(this, hostRef);\n        this.types = [ChartType.Hbar];\n        this.colors = [];\n        this.legend = true;\n        this.stacked = false;\n        this.showMarks = false;\n        /**\n         * Google chart version to load\n         */\n        this.version = '45.2';\n        this.kupChartClicked = createEvent(this, \"kupChartClicked\", 6);\n    }\n    KupChart.prototype.onDataChanged = function () {\n        console.log('changing data');\n    };\n    KupChart.prototype.componentDidLoad = function () {\n        var _this = this;\n        if (!this.axis || !this.series) {\n            // cannot create chart\n            return;\n        }\n        // loading charts\n        if (google) {\n            // getting google charts css from main document\n            document\n                .querySelectorAll(\"link[href^=\\\"https://www.gstatic.com/charts/\" + this.version + \"/css\\\"]\")\n                .forEach(function (node) { return _this.el.shadowRoot.appendChild(node.cloneNode()); });\n            try {\n                this.loadGoogleChart();\n            }\n            catch (err) {\n                console.error(err);\n            }\n        }\n    };\n    KupChart.prototype.componentWillUpdate = function () {\n        if (this.gChart) {\n            this.gChart.clearChart();\n        }\n    };\n    KupChart.prototype.componentDidUpdate = function () {\n        this.loadGoogleChart();\n    };\n    KupChart.prototype.loadGoogleChart = function () {\n        google.charts.setOnLoadCallback(this.createChart.bind(this));\n    };\n    KupChart.prototype.createGoogleChart = function () {\n        if (this.isComboChart()) {\n            return new google.visualization.ComboChart(this.chartContainer);\n        }\n        else if (this.types.length === 1) {\n            switch (this.types[0]) {\n                case ChartType.Area:\n                    return new google.visualization.AreaChart(this.chartContainer);\n                case ChartType.Bubble:\n                    return new google.visualization.BubbleChart(this.chartContainer);\n                case ChartType.Cal:\n                    return new google.visualization.Calendar(this.chartContainer);\n                case ChartType.Candlestick:\n                    return new google.visualization.CandlestickChart(this.chartContainer);\n                case ChartType.Geo:\n                    return new google.visualization.GeoChart(this.chartContainer);\n                case ChartType.Hbar:\n                    return new google.visualization.BarChart(this.chartContainer);\n                case ChartType.Line:\n                    return new google.visualization.LineChart(this.chartContainer);\n                case ChartType.Pie:\n                    return new google.visualization.PieChart(this.chartContainer);\n                case ChartType.Sankey:\n                    return new google.visualization.Sankey(this.chartContainer);\n                case ChartType.Scatter:\n                    return new google.visualization.ScatterChart(this.chartContainer);\n                default:\n                    return new google.visualization.ColumnChart(this.chartContainer);\n            }\n        }\n    };\n    KupChart.prototype.getMainChartType = function () {\n        if (this.types.length > 0) {\n            return this.types[0];\n        }\n        return ChartType.Unk;\n    };\n    KupChart.prototype.isComboChart = function () {\n        return this.types.length > 1;\n    };\n    KupChart.prototype.createGoogleChartOptions = function () {\n        var opts = {\n            is3D: ChartAspect.D3 === this.asp,\n        };\n        if (this.colors && this.colors.length > 0) {\n            opts.colors = this.colors;\n        }\n        if (this.width) {\n            opts.width = this.width;\n        }\n        if (this.height) {\n            opts.height = this.height;\n        }\n        if (!this.legend) {\n            opts.legend = {\n                position: 'none',\n            };\n        }\n        if (this.stacked &&\n            (ChartType.Hbar === this.getMainChartType() ||\n                ChartType.Vbar === this.getMainChartType())) {\n            opts.isStacked = true;\n        }\n        if (this.graphTitle) {\n            opts.title = this.graphTitle;\n            opts.titleTextStyle = {};\n            if (this.graphTitleColor) {\n                opts.titleTextStyle.color = this.graphTitleColor;\n            }\n            if (this.graphTitleSize) {\n                opts.titleTextStyle.fontSize = this.graphTitleSize;\n            }\n        }\n        // series for combo chart\n        if (this.isComboChart()) {\n            opts.series = {};\n            this.types.forEach(function (type, index) {\n                var serieType = 'bars';\n                if (ChartType.Line === type) {\n                    serieType = 'line';\n                }\n                else if (ChartType.Area === type) {\n                    serieType = 'area';\n                }\n                opts.series[index.toString()] = {\n                    type: serieType,\n                };\n            });\n        }\n        return opts;\n    };\n    KupChart.prototype.createChart = function () {\n        var tableColumns = convertColumns(this.data, {\n            axis: this.axis,\n            series: this.series,\n        });\n        var tableRows = convertRows(this.data, tableColumns, this.showMarks);\n        var dataTableColumns = [];\n        for (var i = 0; i < tableColumns.length; i++) {\n            var c = tableColumns[i];\n            dataTableColumns.push({\n                label: c.name,\n            });\n            if (i > 0 && this.showMarks) {\n                dataTableColumns.push({\n                    type: 'string',\n                    role: 'annotation',\n                });\n            }\n        }\n        this.gChartDataTable = new google.visualization.arrayToDataTable([\n            dataTableColumns\n        ].concat(tableRows));\n        this.gChartView = new google.visualization.DataView(this.gChartDataTable);\n        this.gChart = this.createGoogleChart();\n        var options = this.createGoogleChartOptions();\n        this.gChart.draw(this.gChartView, options);\n        google.visualization.events.addListener(this.gChart, 'select', this.onChartSelect.bind(this));\n    };\n    KupChart.prototype.onChartSelect = function () {\n        var selectedItem = this.gChart.getSelection()[0];\n        if (selectedItem) {\n            var event = {};\n            if (selectedItem.date) {\n                // calendar chart\n                event.datetime = selectedItem.date;\n                if (selectedItem.row || selectedItem.row == 0) {\n                    var rowIndex = this.gChartView.getTableRowIndex(selectedItem.row);\n                    event.row = this.data.rows[rowIndex];\n                }\n                else {\n                    return;\n                }\n            }\n            else {\n                // any other chart\n                var rowIndex = selectedItem.row;\n                var colIndex = selectedItem.column;\n                var originalRowIndex = this.gChartView.getTableRowIndex(rowIndex != null ? rowIndex : 0);\n                event.row = this.data.rows[originalRowIndex];\n                if (this.series.length > 1) {\n                    var originalColIndex = this.gChartView.getTableColumnIndex(colIndex != null ? colIndex : 0);\n                    // checking if col is annotation\n                    if ('annotation' ===\n                        this.gChartDataTable.getColumnProperty(originalColIndex, 'role')) {\n                        --originalColIndex;\n                    }\n                    event.column = getColumnByName$1(this.data.columns, this.series[originalColIndex - 1]);\n                }\n                else {\n                    event.column = getColumnByName$1(this.data.columns, this.series[0]);\n                }\n            }\n            this.kupChartClicked.emit(event);\n        }\n    };\n    KupChart.prototype.render = function () {\n        var _this = this;\n        return h(\"div\", { id: \"chart\", ref: function (el) { return (_this.chartContainer = el); } });\n    };\n    Object.defineProperty(KupChart.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(KupChart, \"watchers\", {\n        get: function () {\n            return {\n                \"data\": [\"onDataChanged\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return KupChart;\n}());\nexport { KupChart as kup_chart };\n"],"sourceRoot":"webpack:///"}