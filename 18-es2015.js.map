{"version":3,"sources":["./src/assets/dist/esm/kup-tooltip.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAkG;;AAElG;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4DAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE;AACA;AACA,kDAAkD,YAAY;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAC,SAAS,gBAAgB,EAAE,4DAAC,UAAU,gBAAgB;AACnE,YAAY,4DAAC,SAAS,iBAAiB,EAAE,4DAAC,cAAc,4DAAC,UAAU,gBAAgB,IAAI,4DAAC,SAAS,iBAAiB,EAAE,4DAAC,UAAU,gBAAgB,IAAI,4DAAC,cAAc,4DAAC,UAAU,gBAAgB;AAC7L;AACA;AACA;AACA,gBAAgB,4DAAC,cAAc,4DAAC,UAAU,gBAAgB;AAC1D;AACA;AACA;AACA,YAAY,4DAAC,SAAS,iBAAiB,EAAE,4DAAC,UAAU,gBAAgB;AACpE,YAAY,4DAAC,SAAS,iBAAiB,EAAE,4DAAC,UAAU,gBAAgB;AACpE,YAAY,4DAAC,SAAS,iBAAiB,EAAE,4DAAC,UAAU,gBAAgB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,4DAAC,SAAS,sBAAsB,EAAE,4DAAC,SAAS,6BAA6B,6BAA6B,4DAAC,SAAS,6BAA6B;AACjM;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,gBAAgB,4DAAC,SAAS,4DAA4D,EAAE,4DAAC,SAAS,8CAA8C,gBAAgB,4DAAC,SAAS,mCAAmC;AAC7M;AACA;AACA,gBAAgB,4DAAC,SAAS,0IAA0I,EAAE,4DAAC;AACvK;AACA,qBAAqB,QAAQ,4DAAU,OAAO;AAC9C,2BAA2B;AAC3B;AACA,MAAM;AACN,wBAAwB,eAAe,gDAAgD,wDAAwD,0EAA0E,eAAe,kBAAkB,qBAAqB,wBAAwB,kBAAkB,iCAAiC,aAAa,qCAAqC,6BAA6B,kBAAkB,gBAAgB,sCAAsC,YAAY,oBAAoB,aAAa,4CAA4C,WAAW,kBAAkB,6CAA6C,oBAAoB,aAAa,0BAA0B,sBAAsB,sBAAsB,8BAA8B,8CAA8C,qBAAqB,uBAAuB,sBAAsB,mBAAmB,8CAA8C,0BAA0B,sBAAsB,mEAAmE,kBAAkB,8CAA8C,aAAa,UAAU,gEAAgE,wDAAwD,wCAAwC,0BAA0B,aAAa,iBAAiB,UAAU,8DAA8D,sDAAsD,4CAA4C,oBAAoB,aAAa,sBAAsB,8BAA8B,6DAA6D,kBAAkB,mDAAmD,kCAAkC,EAAE;AACjxD;;AAEqC","file":"18-es2015.js","sourcesContent":["import { r as registerInstance, c as createEvent, h, g as getElement } from './chunk-1851c479.js';\n\nclass KupTooltip {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /**\n         * Layout used to display the items\n         */\n        this.layout = '1';\n        this.visible = false;\n        this.detailVisible = false;\n        // ---- Non reactive ----\n        this.tooltipPosition = {};\n        // check if the event kupTooltipLoadDetail was triggered\n        this.kupTooltipLoadDetailTriggered = false;\n        this.kupTooltipLoadDetail = createEvent(this, \"kupTooltipLoadDetail\", 6);\n    }\n    onDataChanged() {\n        this.detailVisible = true;\n    }\n    // ---- Private methods ----\n    hasData() {\n        return !!this.detailData && !!this.detailData.rows;\n    }\n    resetTimeouts() {\n        if (this.tooltipTimeout) {\n            clearTimeout(this.tooltipTimeout);\n            this.tooltipTimeout = null;\n        }\n        if (this.loadDetailTimeout) {\n            clearTimeout(this.loadDetailTimeout);\n            this.loadDetailTimeout = null;\n        }\n    }\n    loadDetail() {\n        this.loadDetailTimeout = null;\n        this.kupTooltipLoadDetail.emit();\n        this.kupTooltipLoadDetailTriggered = true;\n    }\n    get rows() {\n        return this.hasData() ? this.detailData.rows : [];\n    }\n    // ---- Listeners ----\n    onMouseOver() {\n        if (!this.tooltipTimeout) {\n            this.tooltipTimeout = setTimeout(() => {\n                this.tooltipTimeout = null;\n                // resetting position\n                this.tooltipPosition = {};\n                const rect = this.wrapperEl.getBoundingClientRect();\n                // vertical position\n                if (window.innerHeight - rect.bottom < 150) {\n                    this.tooltipPosition.bottom = `${rect.height + 3}px`;\n                }\n                else {\n                    this.tooltipPosition.top = `${rect.height}px`;\n                }\n                // horizontal position\n                if (window.innerWidth - rect.left < 350) {\n                    // 350 is the min-width of the tooltip\n                    this.tooltipPosition.right = `0`;\n                }\n                else {\n                    this.tooltipPosition.left = `0`;\n                }\n                this.visible = true;\n                if (!this.kupTooltipLoadDetailTriggered) {\n                    // timeout to load detail\n                    this.loadDetailTimeout = setTimeout(() => this.loadDetail(), 250);\n                }\n                else {\n                    // timeout to set the detail visible\n                    this.loadDetailTimeout = setTimeout(() => (this.detailVisible = true), 250);\n                }\n            }, 500);\n        }\n    }\n    onMouseLeave() {\n        this.resetTimeouts();\n        this.visible = false;\n        this.detailVisible = false;\n    }\n    // ---- Render methods ----\n    getDefaultLayout() {\n        return [\n            h(\"div\", { class: \"left\" }, h(\"slot\", { name: \"slot1\" })),\n            h(\"div\", { class: \"right\" }, h(\"div\", null, h(\"slot\", { name: \"slot2\" })), h(\"div\", { class: \"slot3\" }, h(\"slot\", { name: \"slot3\" })), h(\"div\", null, h(\"slot\", { name: \"slot4\" }))),\n        ];\n    }\n    getLayout2() {\n        return (h(\"div\", null, h(\"slot\", { name: \"slot1\" })));\n    }\n    getLayout3() {\n        return [\n            h(\"div\", { class: \"slot1\" }, h(\"slot\", { name: \"slot1\" })),\n            h(\"div\", { class: \"slot2\" }, h(\"slot\", { name: \"slot2\" })),\n            h(\"div\", { class: \"slot3\" }, h(\"slot\", { name: \"slot3\" })),\n        ];\n    }\n    createTooltip() {\n        let mainContent = null;\n        const mainContentClass = {};\n        if (this.layout === '2') {\n            mainContent = this.getLayout2();\n            mainContentClass['layout2'] = true;\n        }\n        else if (this.layout === '3') {\n            mainContent = this.getLayout3();\n            mainContentClass['layout3'] = true;\n        }\n        else {\n            mainContent = this.getDefaultLayout();\n        }\n        let detailContent = null;\n        if (this.hasData()) {\n            detailContent = this.rows.map((row) => (h(\"div\", { class: \"detail-row\" }, h(\"div\", { class: \"detail-row__label\" }, row.cells['label'].value), h(\"div\", { class: \"detail-row__value\" }, row.cells['value'].value))));\n        }\n        const detailClass = {\n            visible: this.detailVisible && this.hasData(),\n        };\n        const tooltipStyle = Object.assign({}, this.tooltipPosition);\n        return (h(\"div\", { id: \"tooltip\", hidden: !this.visible, style: tooltipStyle }, h(\"div\", { id: \"main-content\", class: mainContentClass }, mainContent), h(\"div\", { id: \"detail\", class: detailClass }, detailContent)));\n    }\n    render() {\n        return (h(\"div\", { id: \"wrapper\", onMouseOver: this.onMouseOver.bind(this), onMouseLeave: this.onMouseLeave.bind(this), ref: (el) => (this.wrapperEl = el) }, h(\"slot\", null), this.createTooltip()));\n    }\n    get tooltipEl() { return getElement(this); }\n    static get watchers() { return {\n        \"detailData\": [\"onDataChanged\"]\n    }; }\n    static get style() { return \":host{--tlt_background:var(--kup-tlt_background,#fff);--tlt_detail-lbl-color:var(--kup-detail-lbl-color,#888);--tlt_shadow:var(--kup-tlt_shadow,0px 0px 7.5px 0px hsla(0,0%,50.2%,0.5))}:host #wrapper{position:relative;display:inline-block}:host #wrapper #tooltip{position:absolute;background:var(--tlt_background);z-index:1000;-webkit-box-shadow:var(--tlt_shadow);box-shadow:var(--tlt_shadow);border-radius:3px;min-width:350px}:host #wrapper #tooltip #main-content{margin:20px;display:-ms-flexbox;display:flex}:host #wrapper #tooltip #main-content .left{width:75px;margin-right:15px}:host #wrapper #tooltip #main-content .right{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between}:host #wrapper #tooltip #main-content.layout2{-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}:host #wrapper #tooltip #main-content.layout3{-ms-flex-direction:column;flex-direction:column}:host #wrapper #tooltip #main-content.layout3>div:not(:last-child){margin-bottom:6px}:host #wrapper #tooltip #detail:not(.visible){max-height:0;opacity:0;-webkit-transition:max-height .5s ease-out,opacity .5s ease-out;transition:max-height .5s ease-out,opacity .5s ease-out}:host #wrapper #tooltip #detail.visible{border-top:1px solid #ccc;padding:20px;max-height:500px;opacity:1;-webkit-transition:max-height .5s ease-in,opacity .5s ease-in;transition:max-height .5s ease-in,opacity .5s ease-in}:host #wrapper #tooltip #detail .detail-row{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host #wrapper #tooltip #detail .detail-row:not(:last-child){margin-bottom:6px}:host #wrapper #tooltip #detail .detail-row__label{color:var(--tlt_detail-lbl-color)}\"; }\n}\n\nexport { KupTooltip as kup_tooltip };\n"],"sourceRoot":"webpack:///"}